// Code generated by kok; DO NOT EDIT.
// github.com/RussellLuo/kok

package server

import (
	"reflect"

	"github.com/RussellLuo/kok/pkg/oasv2"
)

var (
	base = `swagger: "2.0"
info:
  title: "No Title"
  version: "0.0.0"
  description: ""
  license:
    name: "MIT"
host: "example.com"
basePath: "/"
schemes:
  - "https"
consumes:
  - "application/json"
produces:
  - "application/json"
`

	paths = `
paths:
  /login:
    post:
      description: ""
      operationId: "PostLogin"
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/PostLoginRequestBody"
      %s
  /signup:
    post:
      description: ""
      operationId: "PostSignup"
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/PostSignupRequestBody"
      %s
  /webhook:
    post:
      description: ""
      operationId: "PostWebhook"
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/PostWebhookRequestBody"
      %s
`
)

func getResponses(schema oasv2.Schema) []oasv2.OASResponses {
	return []oasv2.OASResponses{
		oasv2.GetOASResponses(schema, "PostLogin", 200, &PostLoginResponse{}),
		oasv2.GetOASResponses(schema, "PostSignup", 200, &PostSignupResponse{}),
		oasv2.GetOASResponses(schema, "PostWebhook", 200, &PostWebhookResponse{}),
	}
}

func getDefinitions(schema oasv2.Schema) map[string]oasv2.Definition {
	defs := make(map[string]oasv2.Definition)

	oasv2.AddDefinition(defs, "PostLoginRequestBody", reflect.ValueOf((&PostLoginRequest{}).Body))
	oasv2.AddResponseDefinitions(defs, schema, "PostLogin", 200, (&PostLoginResponse{}).Body())

	oasv2.AddDefinition(defs, "PostSignupRequestBody", reflect.ValueOf((&PostSignupRequest{}).Body))
	oasv2.AddResponseDefinitions(defs, schema, "PostSignup", 200, (&PostSignupResponse{}).Body())

	oasv2.AddDefinition(defs, "PostWebhookRequestBody", reflect.ValueOf((&PostWebhookRequest{}).Body))
	oasv2.AddResponseDefinitions(defs, schema, "PostWebhook", 200, (&PostWebhookResponse{}).Body())

	return defs
}

func OASv2APIDoc(schema oasv2.Schema) string {
	resps := getResponses(schema)
	paths := oasv2.GenPaths(resps, paths)

	defs := getDefinitions(schema)
	definitions := oasv2.GenDefinitions(defs)

	return base + paths + definitions
}
